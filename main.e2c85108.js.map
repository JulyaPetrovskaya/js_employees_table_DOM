{"version":3,"sources":["scripts/main.js"],"names":["minNameLength","minAge","maxAge","table","document","querySelector","ths","querySelectorAll","tbody","rows","Array","from","form","createElement","classList","add","body","appendChild","nameLabel","textContent","nameInput","setAttribute","positionLabel","positionInput","officeLabel","officeSelect","cities","forEach","city","option","value","ageLabel","ageInput","salaryLabel","salaryInput","submitButton","showNotification","type","message","notification","setTimeout","remove","makeRowActive","row","rowItem","contains","makeSortFunction","column","direction","a","b","salaryA","parseInt","children","slice","replace","salaryB","greater","aValue","bValue","innerText","addEventListener","evt","capitalizeWords","str","split","map","word","charAt","toUpperCase","join","preventDefault","nameValue","trim","positionValue","officeValue","ageValue","salaryValue","isValid","length","nameCell","positionCell","officeCell","ageCell","salaryCell","toLocaleString","reset","th","getAttribute","sortFunction","cellIndex","sortedRows","sort","append"],"mappings":";AAAA,aAsQC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EApQD,IAAMA,EAAgB,EAChBC,EAAS,GACTC,EAAS,GAETC,EAAQC,SAASC,cAAc,SAC/BC,EAAMH,EAAMI,iBAAiB,YAC/BC,EAAQL,EAAME,cAAc,SAC5BI,EAAOC,MAAMC,KAAKH,EAAMD,iBAAiB,OAGvCK,EAAOR,SAASS,cAAc,QAEpCD,EAAKE,UAAUC,IAAI,qBACnBX,SAASY,KAAKC,YAAYL,GAG1B,IAAMM,EAAYd,SAASS,cAAc,SAEzCK,EAAUC,YAAc,QACxBP,EAAKK,YAAYC,GAEjB,IAAME,EAAYhB,SAASS,cAAc,SAEzCO,EAAUC,aAAa,OAAQ,QAC/BD,EAAUC,aAAa,UAAW,QAClCD,EAAUC,aAAa,OAAQ,QAC/BD,EAAUC,aAAa,eAAgB,QACvCD,EAAUC,aAAa,YAAY,GACnCH,EAAUD,YAAYG,GAGtB,IAAME,EAAgBlB,SAASS,cAAc,SAE7CS,EAAcH,YAAc,YAC5BP,EAAKK,YAAYK,GAEjB,IAAMC,EAAgBnB,SAASS,cAAc,SAE7CU,EAAcF,aAAa,OAAQ,QACnCE,EAAcF,aAAa,UAAW,YACtCE,EAAcF,aAAa,YAAY,GACvCC,EAAcL,YAAYM,GAG1B,IAAMC,EAAcpB,SAASS,cAAc,SAE3CW,EAAYL,YAAc,UAC1BP,EAAKK,YAAYO,GAEjB,IAAMC,EAAerB,SAASS,cAAc,UAE5CY,EAAaJ,aAAa,YAAY,GACtCG,EAAYP,YAAYQ,GAExB,IAAMC,EAAS,CACb,QACA,YACA,SACA,WACA,YACA,iBAGFA,EAAOC,QAAQ,SAASC,GAChBC,IAAAA,EAASzB,SAASS,cAAc,UAEtCgB,EAAOC,MAAQF,EACfC,EAAOV,YAAcS,EACrBH,EAAaR,YAAYY,KAI3B,IAAME,EAAW3B,SAASS,cAAc,SAExCkB,EAASZ,YAAc,OACvBP,EAAKK,YAAYc,GAEjB,IAAMC,EAAW5B,SAASS,cAAc,SAExCmB,EAASX,aAAa,OAAQ,UAC9BW,EAASX,aAAa,UAAW,OACjCW,EAASX,aAAa,YAAY,GAClCU,EAASd,YAAYe,GAGrB,IAAMC,EAAc7B,SAASS,cAAc,SAE3CoB,EAAYd,YAAc,UAC1BP,EAAKK,YAAYgB,GAEjB,IAAMC,EAAc9B,SAASS,cAAc,SAE3CqB,EAAYb,aAAa,OAAQ,UACjCW,EAASX,aAAa,UAAW,UACjCa,EAAYb,aAAa,YAAY,GACrCY,EAAYhB,YAAYiB,GAGxB,IAAMC,EAAe/B,SAASS,cAAc,UA2E5C,SAASuB,EAAiBC,EAAMC,GACxBC,IAAAA,EAAenC,SAASS,cAAc,OAE5C0B,EAAalB,aAAa,UAAW,gBACrCkB,EAAazB,UAAUC,IAAI,gBAC3BwB,EAAapB,YAAckB,EAAO,IAAMC,EAExClC,SAASY,KAAKC,YAAYsB,GAE1BC,WAAW,WACTD,EAAaE,UACZ,KAUL,SAASC,EAAcC,IACrBlC,EAAOC,MAAMC,KAAKH,EAAMD,iBAAiB,QAEpCoB,QAAQ,SAAAiB,GACPA,EAAQ9B,UAAU+B,SAAS,WAC7BD,EAAQ9B,UAAU2B,OAAO,YAIxBE,EAAI7B,UAAU+B,SAAS,WAC1BF,EAAI7B,UAAUC,IAAI,UA4BtB,SAAS+B,EAAiBC,EAAQC,GACzB,OAAA,SAASC,EAAGC,GACbH,GAAW,IAAXA,EAAc,CACVI,IAAAA,EAAUC,SAASH,EAAEI,SAAS,GACjClC,YAAYmC,MAAM,GAAGC,QAAQ,IAAK,KAC/BC,EAAUJ,SAASF,EAAEG,SAAS,GACjClC,YAAYmC,MAAM,GAAGC,QAAQ,IAAK,KAEjCJ,GAAAA,IAAYK,EACP,OAAA,EAGHC,IAAAA,EAAWN,EAAUK,EAAU,GAAK,EAElCR,MAAc,QAAdA,EAAsBS,GAAWA,EAEnCC,IAAAA,EAAST,EAAEI,SAASN,GAAQ5B,YAC5BwC,EAAST,EAAEG,SAASN,GAAQ5B,YAE9BuC,GAAAA,IAAWC,EACN,OAAA,EAGHF,IAAAA,EAAWC,EAASC,EAAS,GAAK,EAEhCX,MAAc,QAAdA,EAAsBS,GAAWA,GA7J/CtB,EAAad,aAAa,OAAQ,UAClCc,EAAayB,UAAY,gBACzBhD,EAAKK,YAAYkB,GAEjBvB,EAAKiD,iBAAiB,SAAU,SAACC,GAItBC,SAAAA,EAAgBC,GAChBA,OAAAA,EAAIC,MAAM,KAAKC,IAAI,SAAAC,GAAQA,OAAAA,EAAKC,OAAO,GAAGC,cAC/CF,EAAKb,MAAM,KAAIgB,KAAK,KALxBR,EAAIS,iBAQEC,IAAAA,EAAYpD,EAAUU,MAAM2C,OAC5BC,EAAgBnD,EAAcO,MAAM2C,OACpCE,EAAclD,EAAaK,MAC3B8C,EAAWxB,SAASpB,EAASF,OAC7B+C,EAAczB,SAASlB,EAAYJ,MAAM2C,QAE3CK,GAAU,EAoBVA,GAjBAN,EAAUO,OAAS/E,IACrB8E,GAAU,EAEV1C,EAAiB,QACiBpC,gCAAAA,OAAAA,EADlC,gBAIE4E,EAAW3E,GAAU2E,EAAW1E,KAClC4E,GAAU,EACV1C,EAAiB,QAAkCnC,yBAAAA,OAAAA,EAAcC,SAAAA,OAAAA,EAAjE,OAGE2E,EAAc,IAChBC,GAAU,EACV1C,EAAiB,QAAS,kDAGxB0C,EAAS,CAELnC,IAAAA,EAAMvC,SAASS,cAAc,MAC7BmE,EAAW5E,SAASS,cAAc,MAClCoE,EAAe7E,SAASS,cAAc,MACtCqE,EAAa9E,SAASS,cAAc,MACpCsE,EAAU/E,SAASS,cAAc,MACjCuE,EAAahF,SAASS,cAAc,MAE1CmE,EAAS7D,YAAc4C,EAAgBS,GACvCS,EAAa9D,YAAc4C,EAAgBW,GAC3CQ,EAAW/D,YAAcwD,EACzBQ,EAAQhE,YAAcyD,EAEtBQ,EAAWjE,YAAc,IACvBiC,SAASyB,GAAaQ,eAAe,SAEvC1C,EAAI1B,YAAY+D,GAChBrC,EAAI1B,YAAYgE,GAChBtC,EAAI1B,YAAYiE,GAChBvC,EAAI1B,YAAYkE,GAChBxC,EAAI1B,YAAYmE,GAEhB5E,EAAMS,YAAY0B,GAElBA,EAAIkB,iBAAiB,QAAS,WAC5BnB,EAAcC,KAGhBP,EAAiB,UAAW,oCAC5BxB,EAAK0E,WAmBT7E,EAAKkB,QAAQ,SAAAgB,GACXA,EAAIkB,iBAAiB,QAAS,WAC5BnB,EAAcC,OAmBlBrC,EAAIqB,QAAQ,SAAS4D,GACnBA,EAAG1B,iBAAiB,QAAS,WAAW,IAAA,EACtCrD,EAAQL,EAAME,cAAc,SAC5BI,EAAOC,MAAMC,KAAKH,EAAMD,iBAAiB,OAEnCyC,IAAAA,EAA6C,QAAjCuC,EAAGC,aAAa,aAAyB,OAAS,MAM9DC,EAAe3C,EAHNyC,EAAGG,UAG4B1C,GAGxC2C,EAAalF,EAAKmF,KAAKH,IAE7BjF,EAAAA,GAAMqF,OAAUF,MAAAA,EAAAA,EAAAA,IAGhBJ,EAAGlE,aAAa,YAAa2B","file":"main.e2c85108.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst minNameLength = 4;\nconst minAge = 18;\nconst maxAge = 90;\n\nconst table = document.querySelector('table');\nconst ths = table.querySelectorAll('thead th');\nlet tbody = table.querySelector('tbody');\nlet rows = Array.from(tbody.querySelectorAll('tr'));\n\n// create a form\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\ndocument.body.appendChild(form);\n\n// create an input field for the name\nconst nameLabel = document.createElement('label');\n\nnameLabel.textContent = 'Name:';\nform.appendChild(nameLabel);\n\nconst nameInput = document.createElement('input');\n\nnameInput.setAttribute('type', 'text');\nnameInput.setAttribute('data-qa', 'name');\nnameInput.setAttribute('name', 'name');\nnameInput.setAttribute('autocomplete', 'name');\nnameInput.setAttribute('required', true);\nnameLabel.appendChild(nameInput);\n\n// create an input field for position\nconst positionLabel = document.createElement('label');\n\npositionLabel.textContent = 'Position:';\nform.appendChild(positionLabel);\n\nconst positionInput = document.createElement('input');\n\npositionInput.setAttribute('type', 'text');\npositionInput.setAttribute('data-qa', 'position');\npositionInput.setAttribute('required', true);\npositionLabel.appendChild(positionInput);\n\n// create an input field for office\nconst officeLabel = document.createElement('label');\n\nofficeLabel.textContent = 'Office:';\nform.appendChild(officeLabel);\n\nconst officeSelect = document.createElement('select');\n\nofficeSelect.setAttribute('required', true);\nofficeLabel.appendChild(officeSelect);\n\nconst cities = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\ncities.forEach(function(city) {\n  const option = document.createElement('option');\n\n  option.value = city;\n  option.textContent = city;\n  officeSelect.appendChild(option);\n});\n\n// create an input field for age\nconst ageLabel = document.createElement('label');\n\nageLabel.textContent = 'Age:';\nform.appendChild(ageLabel);\n\nconst ageInput = document.createElement('input');\n\nageInput.setAttribute('type', 'number');\nageInput.setAttribute('data-qa', 'age');\nageInput.setAttribute('required', true);\nageLabel.appendChild(ageInput);\n\n// create an input field for salary\nconst salaryLabel = document.createElement('label');\n\nsalaryLabel.textContent = 'Salary:';\nform.appendChild(salaryLabel);\n\nconst salaryInput = document.createElement('input');\n\nsalaryInput.setAttribute('type', 'number');\nageInput.setAttribute('data-qa', 'salary');\nsalaryInput.setAttribute('required', true);\nsalaryLabel.appendChild(salaryInput);\n\n// create a submit button:\nconst submitButton = document.createElement('button');\n\nsubmitButton.setAttribute('type', 'submit');\nsubmitButton.innerText = 'Save to table';\nform.appendChild(submitButton);\n\nform.addEventListener('submit', (evt) => {\n  evt.preventDefault();\n\n  // correction of the entered string to capital letters in each word\n  function capitalizeWords(str) {\n    return str.split(' ').map(word => word.charAt(0).toUpperCase()\n    + word.slice(1)).join(' ');\n  }\n\n  const nameValue = nameInput.value.trim();\n  const positionValue = positionInput.value.trim();\n  const officeValue = officeSelect.value;\n  const ageValue = parseInt(ageInput.value);\n  const salaryValue = parseInt(salaryInput.value.trim());\n\n  let isValid = true;\n\n  // Check for validity of each form field\n  if (nameValue.length < minNameLength) {\n    isValid = false;\n\n    showNotification('error',\n      `Name should contain at least ${minNameLength} letters.`);\n  }\n\n  if (ageValue < minAge || ageValue > maxAge) {\n    isValid = false;\n    showNotification('error', `Age should be between ${minAge} and ${maxAge}.`);\n  }\n\n  if (salaryValue < 0) {\n    isValid = false;\n    showNotification('error', 'Заработная плата не может быть отрицательной.');\n  }\n\n  if (isValid) {\n    // If all fields are valid, add a new employee to the table\n    const row = document.createElement('tr');\n    const nameCell = document.createElement('td');\n    const positionCell = document.createElement('td');\n    const officeCell = document.createElement('td');\n    const ageCell = document.createElement('td');\n    const salaryCell = document.createElement('td');\n\n    nameCell.textContent = capitalizeWords(nameValue);\n    positionCell.textContent = capitalizeWords(positionValue);\n    officeCell.textContent = officeValue;\n    ageCell.textContent = ageValue;\n\n    salaryCell.textContent = '$'\n    + parseInt(salaryValue).toLocaleString('en-US');\n\n    row.appendChild(nameCell);\n    row.appendChild(positionCell);\n    row.appendChild(officeCell);\n    row.appendChild(ageCell);\n    row.appendChild(salaryCell);\n\n    tbody.appendChild(row);\n\n    row.addEventListener('click', () => {\n      makeRowActive(row);\n    });\n\n    showNotification('success', 'New employee added to the table.');\n    form.reset();\n  }\n});\n\nfunction showNotification(type, message) {\n  const notification = document.createElement('div');\n\n  notification.setAttribute('data-qa', 'notification');\n  notification.classList.add('notification');\n  notification.textContent = type + ':' + message;\n\n  document.body.appendChild(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 3000);\n}\n\n// If we click on a row, the class 'active' is added to it\nrows.forEach(row => {\n  row.addEventListener('click', () => {\n    makeRowActive(row);\n  });\n});\n\nfunction makeRowActive(row) {\n  rows = Array.from(tbody.querySelectorAll('tr'));\n\n  rows.forEach(rowItem => {\n    if (rowItem.classList.contains('active')) {\n      rowItem.classList.remove('active');\n    }\n  });\n\n  if (!row.classList.contains('active')) {\n    row.classList.add('active');\n  }\n}\n\n// sort table\nths.forEach(function(th) {\n  th.addEventListener('click', function() {\n    tbody = table.querySelector('tbody');\n    rows = Array.from(tbody.querySelectorAll('tr'));\n\n    const direction = th.getAttribute('data-sort') === 'asc' ? 'desc' : 'asc';\n\n    // Determine the number of the column by which to sort\n    const column = th.cellIndex;\n\n    // Create a function to sort table rows\n    const sortFunction = makeSortFunction(column, direction);\n\n    // Sort table rows and add them back to tbody\n    const sortedRows = rows.sort(sortFunction);\n\n    tbody.append(...sortedRows);\n\n    // Set the sort direction in the data-sort attribute of the table header\n    th.setAttribute('data-sort', direction);\n  });\n});\n\nfunction makeSortFunction(column, direction) {\n  return function(a, b) {\n    if (column === 4) { // check if column is salary\n      const salaryA = parseInt(a.children[4]\n        .textContent.slice(1).replace(',', ''));\n      const salaryB = parseInt(b.children[4]\n        .textContent.slice(1).replace(',', ''));\n\n      if (salaryA === salaryB) {\n        return 0;\n      }\n\n      const greater = (salaryA > salaryB ? 1 : -1);\n\n      return (direction === 'asc' ? greater : -greater);\n    } else { // use existing sorting logic for other columns\n      const aValue = a.children[column].textContent;\n      const bValue = b.children[column].textContent;\n\n      if (aValue === bValue) {\n        return 0;\n      }\n\n      const greater = (aValue > bValue ? 1 : -1);\n\n      return (direction === 'asc' ? greater : -greater);\n    }\n  };\n}\n"]}